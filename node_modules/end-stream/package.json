{
  "_args": [
    [
      "end-stream@~0.1.0",
      "/home/harlock/projects/electron/email/node_modules/level-write-stream"
    ]
  ],
  "_from": "end-stream@>=0.1.0 <0.2.0",
  "_id": "end-stream@0.1.0",
  "_inCache": true,
  "_installable": true,
  "_location": "/end-stream",
  "_npmUser": {
    "email": "raynos2@gmail.com",
    "name": "raynos"
  },
  "_npmVersion": "1.1.65",
  "_phantomChildren": {},
  "_requested": {
    "name": "end-stream",
    "raw": "end-stream@~0.1.0",
    "rawSpec": "~0.1.0",
    "scope": null,
    "spec": ">=0.1.0 <0.2.0",
    "type": "range"
  },
  "_requiredBy": [
    "/level-write-stream"
  ],
  "_resolved": "https://registry.npmjs.org/end-stream/-/end-stream-0.1.0.tgz",
  "_shasum": "32003f3f438a2b0143168137f8fa6e9866c81ed5",
  "_shrinkwrap": null,
  "_spec": "end-stream@~0.1.0",
  "_where": "/home/harlock/projects/electron/email/node_modules/level-write-stream",
  "author": {
    "email": "raynos2@gmail.com",
    "name": "Raynos"
  },
  "bugs": {
    "email": "raynos2@gmail.com",
    "url": "https://github.com/Raynos/end-stream/issues"
  },
  "contributors": [
    {
      "name": "Jake Verbaten"
    }
  ],
  "dependencies": {
    "write-stream": "~0.4.3"
  },
  "description": "A stream that ends after computation finishes",
  "devDependencies": {
    "tap": "~0.3.1"
  },
  "directories": {},
  "dist": {
    "shasum": "32003f3f438a2b0143168137f8fa6e9866c81ed5",
    "tarball": "https://registry.npmjs.org/end-stream/-/end-stream-0.1.0.tgz"
  },
  "homepage": "https://github.com/Raynos/end-stream",
  "keywords": [],
  "licenses": [
    {
      "type": "MIT",
      "url": "http://github.com/Raynos/end-stream/raw/master/LICENSE"
    }
  ],
  "main": "index",
  "maintainers": [
    {
      "name": "raynos",
      "email": "raynos2@gmail.com"
    }
  ],
  "name": "end-stream",
  "optionalDependencies": {},
  "readme": "# end-stream\n\nA stream that ends after computation finishes\n\n## Example\n\nWhen you end this writable stream it will only emit `\"finish\"`\n    after it's finished asynchronously writing each chunk\n    you've written to the stream\n\n```js\nvar stream = EndStream(function write(value, cb) {\n    // do something async\n    async(value, function (err) {\n        // tell cb that your done writing it.\n        // Optionally pass it an err as a shorthand for\n        // stream.emit(\"error\", err)\n        cb(err)\n    })\n})\n\nstream.write(foo)\nstream.write(bar)\n\nstream.end()\nstream.on(\"finish\", function () {\n    // only called after both foo and bar have been\n    // asynchronously written. e.g. persisted to db.\n})\n```\n\n## Installation\n\n`npm install end-stream`\n\n## Contributors\n\n - Raynos\n\n## MIT Licenced\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/Raynos/end-stream.git"
  },
  "scripts": {
    "test": "tap --stderr --tap ./test"
  },
  "version": "0.1.0"
}
